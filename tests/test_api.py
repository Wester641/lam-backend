import requests
import json

BASE_URL = "http://localhost:8000"


def test_api():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ FastAPI —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤...")

    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
    print("\nüìç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞:")
    response = requests.get(f"{BASE_URL}/")
    print(f"Status: {response.status_code}")
    print(f"Response: {response.json()}")

    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º health check
    print("\n‚ù§Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è:")
    response = requests.get(f"{BASE_URL}/health")
    print(f"Status: {response.status_code}")
    print(f"Response: {response.json()}")

    # 3. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    print("\nüìÅ –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π:")
    response = requests.get(f"{BASE_URL}/api/v1/categories")
    print(f"Status: {response.status_code}")
    categories = response.json()
    print(f"–ù–∞–π–¥–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(categories)}")
    for cat in categories:
        print(f"  - {cat['name']} ({cat['slug']})")

    # 4. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –±—Ä–µ–Ω–¥—ã
    print("\nüè∑Ô∏è –ü–æ–ª—É—á–µ–Ω–∏–µ –±—Ä–µ–Ω–¥–æ–≤:")
    response = requests.get(f"{BASE_URL}/api/v1/brands")
    print(f"Status: {response.status_code}")
    brands = response.json()
    print(f"–ù–∞–π–¥–µ–Ω–æ –±—Ä–µ–Ω–¥–æ–≤: {len(brands)}")
    for brand in brands:
        print(f"  - {brand['name']} ({brand['slug']})")

    # 5. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
    print("\nüì± –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤:")
    response = requests.get(f"{BASE_URL}/api/v1/products")
    print(f"Status: {response.status_code}")
    products = response.json()
    print(f"–ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}")
    for product in products:
        print(f"  - {product['title']} (${product['base_price']})")

    # 6. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é —á–µ—Ä–µ–∑ API
    print("\n‚ûï –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —á–µ—Ä–µ–∑ API:")
    new_category = {"name": "–ü–ª–∞–Ω—à–µ—Ç—ã", "description": "–ö–∞—Ç–µ–≥–æ—Ä–∏—è –ø–ª–∞–Ω—à–µ—Ç–æ–≤"}
    response = requests.post(f"{BASE_URL}/api/v1/categories", json=new_category)
    print(f"Status: {response.status_code}")
    if response.status_code == 201:
        created_category = response.json()
        print(
            f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {created_category['name']} (ID: {created_category['id']})"
        )

        # 7. –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä
        print("\n‚ûï –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ —á–µ—Ä–µ–∑ API:")
        new_product = {
            "title": "iPad Pro 12.9",
            "description": "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω—à–µ—Ç Apple",
            "sku": "IPAD-PRO-001",
            "base_price": 1099.99,
            "old_price": 1199.99,
            "total_stock": 5,
            "category_id": created_category["id"],
            "brand_id": brands[0]["id"] if brands else None,
            "is_featured": True,
        }
        response = requests.post(f"{BASE_URL}/api/v1/products", json=new_product)
        print(f"Status: {response.status_code}")
        if response.status_code == 201:
            created_product = response.json()
            print(
                f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–æ–≤–∞—Ä: {created_product['title']} (SKU: {created_product['sku']})"
            )

    # 8. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞:")
    response = requests.get(f"{BASE_URL}/api/v1/products/search?q=Samsung")
    print(f"Status: {response.status_code}")
    search_results = response.json()
    print(f"–ù–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É 'Samsung': {len(search_results)} —Ç–æ–≤–∞—Ä–æ–≤")

    # 9. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
    print("\nüîΩ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Ç–æ–≤–∞—Ä—ã):")
    response = requests.get(f"{BASE_URL}/api/v1/products/featured")
    print(f"Status: {response.status_code}")
    featured_products = response.json()
    print(f"–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤: {len(featured_products)}")

    # 10. –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± API
    print("\nüìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± API:")
    response = requests.get(f"{BASE_URL}/api/v1")
    print(f"Status: {response.status_code}")
    api_info = response.json()
    print(f"API Name: {api_info['name']}")
    print(f"Version: {api_info['version']}")
    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:")
    for endpoint, url in api_info["endpoints"].items():
        print(f"  - {endpoint}: {url}")

    print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã API –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
    print(f"\nüåê –û—Ç–∫—Ä–æ–π—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é: {BASE_URL}/docs")
    print(f"üìö –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: {BASE_URL}/redoc")


if __name__ == "__main__":
    test_api()
