import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É –≤ PYTHONPATH
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database.connection import SessionLocal
from app.repositories import CategoryRepository, BrandRepository
from app.schemas import CategoryCreate, BrandCreate
from slugify import slugify


def test_repositories():
    db = SessionLocal()

    try:
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤...")

        # –¢–µ—Å—Ç CategoryRepository
        print("\nüìÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CategoryRepository:")
        category_repo = CategoryRepository(db)

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        test_category = CategoryCreate(
            name="–ù–æ—É—Ç–±—É–∫–∏",
            slug=slugify("–ù–æ—É—Ç–±—É–∫–∏"),
            description="–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–æ—É—Ç–±—É–∫–æ–≤",
            is_active=True,
        )

        created_category = category_repo.create(test_category)
        print(
            f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {created_category.name} (ID: {created_category.id})"
        )

        # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ ID
        found_category = category_repo.get_by_id(created_category.id)
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –ø–æ ID: {found_category.name}")

        # –ü–æ–ª—É—á–∞–µ–º –ø–æ slug
        found_by_slug = category_repo.get_by_slug(created_category.slug)
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –ø–æ slug: {found_by_slug.name}")

        # –¢–µ—Å—Ç BrandRepository
        print("\nüè∑Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ BrandRepository:")
        brand_repo = BrandRepository(db)

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –±—Ä–µ–Ω–¥
        test_brand = BrandCreate(
            name="Apple",
            slug=slugify("Apple"),
            description="–ë—Ä–µ–Ω–¥ Apple",
            is_active=True,
        )

        created_brand = brand_repo.create(test_brand)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –±—Ä–µ–Ω–¥: {created_brand.name} (ID: {created_brand.id})")

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –±—Ä–µ–Ω–¥—ã
        all_categories = category_repo.get_all()
        all_brands = brand_repo.get_all()

        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"üìÅ –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {len(all_categories)}")
        print(f"üè∑Ô∏è –í—Å–µ–≥–æ –±—Ä–µ–Ω–¥–æ–≤: {len(all_brands)}")

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        print(f"\nüìã –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:")
        for cat in all_categories:
            print(f"  - {cat.name} ({cat.slug})")

        print(f"\nüìã –ë—Ä–µ–Ω–¥—ã:")
        for brand in all_brands:
            print(f"  - {brand.name} ({brand.slug})")

        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö: {e}")
        import traceback

        traceback.print_exc()
    finally:
        db.close()


if __name__ == "__main__":
    test_repositories()
