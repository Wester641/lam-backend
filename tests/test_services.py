import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É –≤ PYTHONPATH
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.database.connection import SessionLocal
from app.services import CategoryService, BrandService, ProductService
from app.schemas import CategoryCreate, BrandCreate, ProductCreate


def test_services():
    db = SessionLocal()

    try:
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤...")

        # –¢–µ—Å—Ç CategoryService
        print("\nüìÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ CategoryService:")
        category_service = CategoryService(db)

        # –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        category_data = CategoryCreate(
            name="–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã",
            description="–ö–∞—Ç–µ–≥–æ—Ä–∏—è —Å–º–∞—Ä—Ç—Ñ–æ–Ω–æ–≤",
            # slug –±—É–¥–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        )

        created_category = category_service.create(category_data)
        print(
            f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {created_category.name} (slug: {created_category.slug})"
        )

        # –¢–µ—Å—Ç BrandService
        print("\nüè∑Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ BrandService:")
        brand_service = BrandService(db)

        # –°–æ–∑–¥–∞–µ–º –±—Ä–µ–Ω–¥
        brand_data = BrandCreate(
            name="Samsung",
            description="–ë—Ä–µ–Ω–¥ Samsung",
            # slug –±—É–¥–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        )

        created_brand = brand_service.create(brand_data)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –±—Ä–µ–Ω–¥: {created_brand.name} (slug: {created_brand.slug})")

        # –¢–µ—Å—Ç ProductService
        print("\nüì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ProductService:")
        product_service = ProductService(db)

        # –°–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä
        product_data = ProductCreate(
            title="Samsung Galaxy S24",
            description="–§–ª–∞–≥–º–∞–Ω—Å–∫–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω Samsung",
            sku="SGS24-001",
            base_price=899.99,
            old_price=999.99,
            total_stock=10,
            category_id=created_category.id,
            brand_id=created_brand.id,
            is_featured=True,
        )

        created_product = product_service.create(product_data)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–æ–≤–∞—Ä: {created_product.title} (SKU: {created_product.sku})")
        print(
            f"   –¶–µ–Ω–∞: ${created_product.base_price}, –û—Å—Ç–∞—Ç–æ–∫: {created_product.total_stock}"
        )

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫
        print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞:")
        search_results = product_service.search("Samsung")
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∑–∞–ø—Ä–æ—Å—É 'Samsung': {len(search_results)}")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
        print("\nüîΩ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:")
        featured_products = product_service.get_featured()
        print(f"‚úÖ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤: {len(featured_products)}")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–æ–º
        print("\nüì¶ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–º:")
        # –£–º–µ–Ω—å—à–∞–µ–º –æ—Å—Ç–∞—Ç–æ–∫
        updated_product = product_service.decrease_stock(created_product.id, 3)
        print(f"‚úÖ –û—Å—Ç–∞—Ç–æ–∫ –ø–æ—Å–ª–µ –ø—Ä–æ–¥–∞–∂–∏ 3 —à—Ç—É–∫: {updated_product.total_stock}")

        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –æ—Å—Ç–∞—Ç–æ–∫
        updated_product = product_service.increase_stock(created_product.id, 5)
        print(f"‚úÖ –û—Å—Ç–∞—Ç–æ–∫ –ø–æ—Å–ª–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è 5 —à—Ç—É–∫: {updated_product.total_stock}")

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print("\nüìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        total_categories = category_service.get_count()
        total_brands = brand_service.get_count()
        total_products = product_service.get_count()

        print(f"üìÅ –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {total_categories}")
        print(f"üè∑Ô∏è –í—Å–µ–≥–æ –±—Ä–µ–Ω–¥–æ–≤: {total_brands}")
        print(f"üì± –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {total_products}")

        print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã —Å–µ—Ä–≤–∏—Å–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö: {e}")
        import traceback

        traceback.print_exc()
    finally:
        db.close()


if __name__ == "__main__":
    test_services()
