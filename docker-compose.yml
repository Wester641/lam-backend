services:
  db:
    image: postgres:16-alpine
    container_name: lnm-backend-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-ecommerce_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ecommerce_password123}
      POSTGRES_DB: ${POSTGRES_DB:-ecommerce_db}
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ecommerce_user} -d ${POSTGRES_DB:-ecommerce_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - lnm-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lnm-backend-api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-ecommerce_user}:${POSTGRES_PASSWORD:-ecommerce_password123}@db:5432/${POSTGRES_DB:-ecommerce_db}
      - APP_NAME=${APP_NAME:-lnm-backend}
      - APP_VERSION=${APP_VERSION:-1.0.0}
      - DEBUG=${DEBUG:-False}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - ALGORITHM=${ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-["http://localhost:3000"]}
      - UPLOAD_DIR=${UPLOAD_DIR:-uploads}
      - MAX_FILE_SIZE=${MAX_FILE_SIZE:-5242880}
    volumes:
      - ./uploads:/opt/app/uploads
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - lnm-network

volumes:
  postgres_data:
    driver: local

networks:
  lnm-network:
    driver: bridge